//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class LIV_Texture : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal LIV_Texture(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LIV_Texture obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~LIV_Texture() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LIV_NativePINVOKE.delete_LIV_Texture(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public int id {
    set {
      LIV_NativePINVOKE.LIV_Texture_id_set(swigCPtr, value);
    } 
    get {
      int ret = LIV_NativePINVOKE.LIV_Texture_id_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_uintptr_t d3d11_texturePtr {
    set {
      LIV_NativePINVOKE.LIV_Texture_d3d11_texturePtr_set(swigCPtr, SWIGTYPE_p_uintptr_t.getCPtr(value));
      if (LIV_NativePINVOKE.SWIGPendingException.Pending) throw LIV_NativePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uintptr_t ret = new SWIGTYPE_p_uintptr_t(LIV_NativePINVOKE.LIV_Texture_d3d11_texturePtr_get(swigCPtr), true);
      if (LIV_NativePINVOKE.SWIGPendingException.Pending) throw LIV_NativePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public uint gl_textureName {
    set {
      LIV_NativePINVOKE.LIV_Texture_gl_textureName_set(swigCPtr, value);
    } 
    get {
      uint ret = LIV_NativePINVOKE.LIV_Texture_gl_textureName_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_uintptr_t __ensure_padding_8_bytes {
    set {
      LIV_NativePINVOKE.LIV_Texture___ensure_padding_8_bytes_set(swigCPtr, SWIGTYPE_p_uintptr_t.getCPtr(value));
      if (LIV_NativePINVOKE.SWIGPendingException.Pending) throw LIV_NativePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uintptr_t ret = new SWIGTYPE_p_uintptr_t(LIV_NativePINVOKE.LIV_Texture___ensure_padding_8_bytes_get(swigCPtr), true);
      if (LIV_NativePINVOKE.SWIGPendingException.Pending) throw LIV_NativePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uintptr_t ShareableHandle {
    set {
      LIV_NativePINVOKE.LIV_Texture_ShareableHandle_set(swigCPtr, SWIGTYPE_p_uintptr_t.getCPtr(value));
      if (LIV_NativePINVOKE.SWIGPendingException.Pending) throw LIV_NativePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uintptr_t ret = new SWIGTYPE_p_uintptr_t(LIV_NativePINVOKE.LIV_Texture_ShareableHandle_get(swigCPtr), true);
      if (LIV_NativePINVOKE.SWIGPendingException.Pending) throw LIV_NativePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ulong timestamp {
    set {
      LIV_NativePINVOKE.LIV_Texture_timestamp_set(swigCPtr, value);
    } 
    get {
      ulong ret = LIV_NativePINVOKE.LIV_Texture_timestamp_get(swigCPtr);
      return ret;
    } 
  }

  public int type {
    set {
      LIV_NativePINVOKE.LIV_Texture_type_set(swigCPtr, value);
    } 
    get {
      int ret = LIV_NativePINVOKE.LIV_Texture_type_get(swigCPtr);
      return ret;
    } 
  }

  public uint dxgi_pixelFormat {
    set {
      LIV_NativePINVOKE.LIV_Texture_dxgi_pixelFormat_set(swigCPtr, value);
    } 
    get {
      uint ret = LIV_NativePINVOKE.LIV_Texture_dxgi_pixelFormat_get(swigCPtr);
      return ret;
    } 
  }

  public uint gl_pixelFormat {
    set {
      LIV_NativePINVOKE.LIV_Texture_gl_pixelFormat_set(swigCPtr, value);
    } 
    get {
      uint ret = LIV_NativePINVOKE.LIV_Texture_gl_pixelFormat_get(swigCPtr);
      return ret;
    } 
  }

  public int colorSpace {
    set {
      LIV_NativePINVOKE.LIV_Texture_colorSpace_set(swigCPtr, value);
    } 
    get {
      int ret = LIV_NativePINVOKE.LIV_Texture_colorSpace_get(swigCPtr);
      return ret;
    } 
  }

  public int width {
    set {
      LIV_NativePINVOKE.LIV_Texture_width_set(swigCPtr, value);
    } 
    get {
      int ret = LIV_NativePINVOKE.LIV_Texture_width_get(swigCPtr);
      return ret;
    } 
  }

  public int height {
    set {
      LIV_NativePINVOKE.LIV_Texture_height_set(swigCPtr, value);
    } 
    get {
      int ret = LIV_NativePINVOKE.LIV_Texture_height_get(swigCPtr);
      return ret;
    } 
  }

  public int deviceType {
    set {
      LIV_NativePINVOKE.LIV_Texture_deviceType_set(swigCPtr, value);
    } 
    get {
      int ret = LIV_NativePINVOKE.LIV_Texture_deviceType_get(swigCPtr);
      return ret;
    } 
  }

  public LIV_Texture() : this(LIV_NativePINVOKE.new_LIV_Texture(), true) {
  }

}
